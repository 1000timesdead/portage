start-close a netbeans session with a vim command

diff --git a/runtime/doc/index.txt b/runtime/doc/index.txt
--- a/runtime/doc/index.txt
+++ b/runtime/doc/index.txt
@@ -1321,7 +1321,9 @@
 |:mode|		:mod[e]		show or change the screen mode
 |:mzscheme|	:mz[scheme]	execute MzScheme command
 |:mzfile|	:mzf[ile]	execute MzScheme script file
-|:nbkey|	:nb[key]	pass a key to Netbeans
+|:nbclose|	:nbc[lose]	close the current Netbeans session
+|:nbkey|	:nbk[ey]	pass a key to Netbeans
+|:nbstart|	:nbs[art]	start a new Netbeans session
 |:next|		:n[ext]		go to next file in the argument list
 |:new|		:new		create a new empty window
 |:nmap|		:nm[ap]		like ":map" but for Normal mode
diff --git a/runtime/doc/netbeans.txt b/runtime/doc/netbeans.txt
--- a/runtime/doc/netbeans.txt
+++ b/runtime/doc/netbeans.txt
@@ -1,4 +1,4 @@
-*netbeans.txt*  For Vim version 7.2.  Last change: 2010 Januray 1st
+*netbeans.txt*  For Vim version 7.2.  Last change: 2010 February 25
 
 
 		  VIM REFERENCE MANUAL    by Gordon Prieur et al.
@@ -14,7 +14,7 @@
 4.  Error Messages				|netbeans-messages|
 5.  Running Vim in NetBeans mode		|netbeans-run|
 6.  NetBeans protocol				|netbeans-protocol|
-7.  NetBeans key				|netbeans-key|
+7.  NetBeans commands				|netbeans-commands|
 8.  Known problems				|netbeans-problems|
 9.  Debugging NetBeans protocol			|netbeans-debugging|
 10. NetBeans External Editor
@@ -46,8 +46,8 @@
 	http://www.freehackers.org/VimIntegration
 - Agide, an IDE for the AAP project, written in Python:
 	http://www.a-a-p.org
-- Clewn, a gdb integration into Vim, written in C:
-	http://clewn.sourceforge.net/
+- Pyclewn, a gdb integration into Vim, written in Python:
+	http://pyclewn.sourceforge.net/
 - VimPlugin, integration of Vim inside Eclipse:
 	http://vimplugin.sourceforge.net/wiki/pmwiki.php
 - PIDA, IDE written in Python integrating Vim:
@@ -185,25 +185,37 @@
 ==============================================================================
 5. Running Vim in NetBeans mode				*netbeans-run*
 
-Vim must be started with the |-nb| argument.  Three forms can be used, that
-differ in the way the information for the connection is specified:
+There are two different ways to run Vim in NetBeans mode:
+
+	+ an IDE may start Vim with the|-nb|command line argument
+	+ NetBeans can be started from within Vim with the|:nbstart|command
+
+							*netbeans-parameters*
+Three forms can be used to setup the NetBeans connection parameters.
+When started from the command line, the|-nb|command line argument may be:
 
 	-nb={fname}				from a file
 	-nb:{hostname}:{addr}:{password}	directly
 	-nb					from a file or environment
 
+When started from within Vim, the|:nbstart|optional argument may be:
+
+	={fname}				from a file
+	:{hostname}:{addr}:{password}	        directly
+	<MISSING ARGUMENT>			from a file or environment
+
 							*E660* *E668*
-For security reasons, the best method is to write the information in a file
-readable only by the user.  The name of the file can be passed with the
-"-nb={fname}" argument or, when "-nb" is used without a parameter, the
-environment variable "__NETBEANS_CONINFO".  The file must contain these three
-lines, in any order:
+When NetBeans is started from the command line, for security reasons, the best
+method is to write the information in a file readable only by the user.  The
+name of the file can be passed with the "-nb={fname}" argument or, when "-nb"
+is used without a parameter, the environment variable "__NETBEANS_CONINFO".
+The file must contain these three lines, in any order:
 
 	host={hostname}
 	port={addr}
 	auth={password}
 
-Other lines are ignored.  The caller of Vim is responsible for deleting the
+Other lines are ignored.  The Vim Controller is responsible for deleting the
 file afterwards.
 
 {hostname} is the name of the machine where Vim Controller is running.  When
@@ -802,10 +814,22 @@
 
 
 ==============================================================================
-7. NetBeans key						*netbeans-key*
+7. NetBeans commands					*netbeans-commands*
+
+							*:nbstart*
+:nbs[tart] {connection}	Start a new Netbeans session with {connection} as the
+			socket connection parameters. The format of
+			{connection} is described in|netbeans-parameters|.
+			At any time, one may check if the netbeans socket is
+			connected by running the command:
+			':echo has("netbeans_enabled")'
+
+							*:nbclose*
+:nbc[lose]		Close the current NetBeans session. Remove all placed
+			signs.
 
 							*:nbkey*
-:nbkey key		Pass the key to the Vim Controller for processing
+:nbk[ey] {key}		Pass the {key} to the Vim Controller for processing
 
 When a hot-key has been installed with the specialKeys command, this command
 can be used to generate a hotkey messages to the Vim Controller. The events
diff --git a/src/buffer.c b/src/buffer.c
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -636,8 +636,7 @@
     buf_delete_signs(buf);		/* delete any signs */
 #endif
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
-        netbeans_file_killed(buf);
+    netbeans_file_killed(buf);
 #endif
 #ifdef FEAT_LOCALMAP
     map_clear_int(buf, MAP_ALL_MODES, TRUE, FALSE);  /* clear local mappings */
@@ -1447,8 +1446,7 @@
 
 #ifdef FEAT_NETBEANS_INTG
     /* Send fileOpened event because we've changed buffers. */
-    if (usingNetbeans && isNetbeansBuffer(curbuf))
-	netbeans_file_activated(curbuf);
+    netbeans_file_activated(curbuf);
 #endif
 
     /* Change directories when the 'acd' option is set. */
diff --git a/src/edit.c b/src/edit.c
--- a/src/edit.c
+++ b/src/edit.c
@@ -6267,7 +6267,7 @@
 #ifdef FEAT_SIGNS
 	if (curwin->w_buffer->b_signlist != NULL
 # ifdef FEAT_NETBEANS_INTG
-			    || usingNetbeans
+			    || !netbeans_closed()
 # endif
 		    )
 	    textwidth -= 1;
@@ -9431,13 +9431,9 @@
 			replace_join(repl_off);
 	    }
 #ifdef FEAT_NETBEANS_INTG
-	    if (usingNetbeans)
-	    {
-		netbeans_removed(curbuf, fpos.lnum, cursor->col,
-							       (long)(i + 1));
-		netbeans_inserted(curbuf, fpos.lnum, cursor->col,
-							   (char_u *)"\t", 1);
-	    }
+            netbeans_removed(curbuf, fpos.lnum, cursor->col, (long)(i + 1));
+            netbeans_inserted(curbuf, fpos.lnum, cursor->col,
+                                                       (char_u *)"\t", 1);
 #endif
 	    cursor->col -= i;
 
diff --git a/src/eval.c b/src/eval.c
--- a/src/eval.c
+++ b/src/eval.c
@@ -11925,7 +11925,7 @@
 #endif
 #ifdef FEAT_NETBEANS_INTG
 	else if (STRICMP(name, "netbeans_enabled") == 0)
-	    n = usingNetbeans;
+	    n = !netbeans_closed();
 #endif
     }
 
diff --git a/src/ex_cmds.c b/src/ex_cmds.c
--- a/src/ex_cmds.c
+++ b/src/ex_cmds.c
@@ -3821,7 +3821,7 @@
 	    workshop_file_opened((char *)curbuf->b_ffname, curbuf->b_p_ro);
 # endif
 # ifdef FEAT_NETBEANS_INTG
-	if (usingNetbeans && ((flags & ECMD_SET_HELP) != ECMD_SET_HELP))
+	if ((flags & ECMD_SET_HELP) != ECMD_SET_HELP)
 	    netbeans_file_opened(curbuf);
 # endif
     }
diff --git a/src/ex_cmds.h b/src/ex_cmds.h
--- a/src/ex_cmds.h
+++ b/src/ex_cmds.h
@@ -619,8 +619,12 @@
 			RANGE|FILE1|NEEDARG|CMDWIN),
 EX(CMD_next,		"next",		ex_next,
 			RANGE|NOTADR|BANG|FILES|EDITCMD|ARGOPT|TRLBAR),
+EX(CMD_nbclose,		"nbclose",	ex_nbclose,
+			TRLBAR|CMDWIN),
 EX(CMD_nbkey,		"nbkey",	ex_nbkey,
 			EXTRA|NOTADR|NEEDARG),
+EX(CMD_nbstart,		"nbstart",	ex_nbstart,
+			WORD1|TRLBAR|CMDWIN),
 EX(CMD_new,		"new",		ex_splitview,
 			BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
 EX(CMD_nmap,		"nmap",		ex_map,
diff --git a/src/ex_docmd.c b/src/ex_docmd.c
--- a/src/ex_docmd.c
+++ b/src/ex_docmd.c
@@ -439,7 +439,9 @@
 # define ex_wsverb		ex_ni
 #endif
 #ifndef FEAT_NETBEANS_INTG
+# define ex_nbclose		ex_ni
 # define ex_nbkey		ex_ni
+# define ex_nbstart		ex_ni
 #endif
 
 #ifndef FEAT_EVAL
diff --git a/src/fileio.c b/src/fileio.c
--- a/src/fileio.c
+++ b/src/fileio.c
@@ -3249,7 +3249,7 @@
 #endif
 
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans && isNetbeansBuffer(buf))
+    if (isNetbeansBuffer(buf))
     {
 	if (whole)
 	{
diff --git a/src/getchar.c b/src/getchar.c
--- a/src/getchar.c
+++ b/src/getchar.c
@@ -2941,8 +2941,7 @@
 
 #if defined(FEAT_NETBEANS_INTG)
 	/* Process the queued netbeans messages. */
-	if (usingNetbeans)
-	    netbeans_parse_messages();
+        netbeans_parse_messages();
 #endif
 
 	if (got_int || (script_char = getc(scriptin[curscript])) < 0)
diff --git a/src/globals.h b/src/globals.h
--- a/src/globals.h
+++ b/src/globals.h
@@ -1364,7 +1364,6 @@
 EXTERN int netbeansForcedQuit INIT(= 0);/* don't write modified files */
 EXTERN int netbeansReadFile INIT(= 1);	/* OK to read from disk if != 0 */
 EXTERN int netbeansSuppressNoLines INIT(= 0); /* skip "No lines in buffer" */
-EXTERN int usingNetbeans INIT(= 0);	/* set if -nb flag is used */
 #endif
 
 /*
diff --git a/src/gui.c b/src/gui.c
--- a/src/gui.c
+++ b/src/gui.c
@@ -4782,8 +4782,7 @@
 	msg_clr_eos_force();
 	gui_start();
 #ifdef FEAT_NETBEANS_INTG
-        if (usingNetbeans)
-            netbeans_gui_register();
+        netbeans_gui_register();
 #endif
     }
     if (!ends_excmd(*eap->arg))
diff --git a/src/gui_gtk_x11.c b/src/gui_gtk_x11.c
--- a/src/gui_gtk_x11.c
+++ b/src/gui_gtk_x11.c
@@ -567,7 +567,6 @@
 #endif
 #ifdef FEAT_NETBEANS_INTG
 		case ARG_NETBEANS:
-		    ++usingNetbeans;
 		    gui.dofork = FALSE; /* don't fork() when starting GUI */
 		    netbeansArg = argv[i];
 		    break;
@@ -6584,8 +6583,7 @@
 
 #if defined(FEAT_NETBEANS_INTG)
 	/* Process the queued netbeans messages. */
-	if (usingNetbeans)
-	    netbeans_parse_messages();
+        netbeans_parse_messages();
 #endif
 
 	/*
diff --git a/src/gui_w32.c b/src/gui_w32.c
--- a/src/gui_w32.c
+++ b/src/gui_w32.c
@@ -1278,24 +1278,12 @@
 	for (arg = 1; arg < *argc; arg++)
 	    if (strncmp("-nb", argv[arg], 3) == 0)
 	    {
-		usingNetbeans++;
 		netbeansArg = argv[arg];
 		mch_memmove(&argv[arg], &argv[arg + 1],
 					    (--*argc - arg) * sizeof(char *));
 		argv[*argc] = NULL;
 		break;	/* enough? */
 	    }
-
-	if (usingNetbeans)
-	{
-	    WSADATA wsaData;
-	    int wsaerr;
-
-	    /* Init WinSock */
-	    wsaerr = WSAStartup(MAKEWORD(2, 2), &wsaData);
-	    if (wsaerr == 0)
-		WSInitialized = TRUE;
-	}
     }
 #endif
 
@@ -4840,6 +4828,9 @@
     int y;
     int x;
 
+    if (netbeans_closed())
+        return;
+
     x = 0;
     y = TEXT_Y(row);
 
@@ -4854,4 +4845,21 @@
     SetPixel(s_hdc, x+3, y++, gui.currFgColor);
     SetPixel(s_hdc, x+2, y, gui.currFgColor);
 }
-#endif
+
+/*
+ * Initialize the Winsock dll.
+ */
+    void
+netbeans_init_winsock()
+{
+    WSADATA wsaData;
+    int wsaerr;
+
+    if (WSInitialized)
+        return;
+
+    wsaerr = WSAStartup(MAKEWORD(2, 2), &wsaData);
+    if (wsaerr == 0)
+        WSInitialized = TRUE;
+}
+#endif
diff --git a/src/gui_w48.c b/src/gui_w48.c
--- a/src/gui_w48.c
+++ b/src/gui_w48.c
@@ -1999,8 +1999,7 @@
 
 #ifdef FEAT_NETBEANS_INTG
 	/* Process the queued netbeans messages. */
-	if (usingNetbeans)
-	    netbeans_parse_messages();
+        netbeans_parse_messages();
 #endif
 
 	/*
diff --git a/src/gui_x11.c b/src/gui_x11.c
--- a/src/gui_x11.c
+++ b/src/gui_x11.c
@@ -710,7 +710,7 @@
     }
 #endif
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
+    if (!netbeans_closed())
     {
 	XRectangle  rec;
 
@@ -1253,7 +1253,6 @@
 #ifdef FEAT_NETBEANS_INTG
 	    if (strncmp("-nb", argv[arg], 3) == 0)
 	{
-	    usingNetbeans++;
 	    gui.dofork = FALSE;	/* don't fork() when starting GUI */
 	    netbeansArg = argv[arg];
 	    mch_memmove(&argv[arg], &argv[arg + 1],
diff --git a/src/main.c b/src/main.c
--- a/src/main.c
+++ b/src/main.c
@@ -935,7 +935,7 @@
 	stuffcharReadbuff(K_NOP);
 
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
+    if (netbeansArg != NULL && strncmp("-nb", netbeansArg, 3) == 0)
     {
 # ifdef FEAT_GUI
 #  if !defined(FEAT_GUI_MOTIF) && !defined(FEAT_GUI_GTK)  \
@@ -948,7 +948,7 @@
 #  endif
 # endif
 	/* Tell the client that it can start sending commands. */
-	netbeans_startup_done();
+	netbeans_open(netbeansArg + 3, TRUE);
     }
 #endif
 
@@ -1890,7 +1890,6 @@
                 /* checking for "-nb", netbeans parameters */
 		if (argv[0][argv_idx] == 'b')
                 {
-		    ++usingNetbeans;
 		    netbeansArg = argv[0];
 	            argv_idx = -1;	    /* skip to next argument */
                 }
@@ -2384,7 +2383,7 @@
 	 * input buffer so fast I can't even kill the process in under 2
 	 * minutes (and it beeps continuously the whole time :-)
 	 */
-	if (usingNetbeans && (!parmp->stdout_isatty || !input_isatty))
+	if (!netbeans_closed() && (!parmp->stdout_isatty || !input_isatty))
 	{
 	    mch_errmsg(_("Vim: Error: Failure to start gvim from NetBeans\n"));
 	    exit(1);
diff --git a/src/memline.c b/src/memline.c
--- a/src/memline.c
+++ b/src/memline.c
@@ -2701,13 +2701,9 @@
     ml_updatechunk(buf, lnum + 1, (long)len, ML_CHNK_ADDLINE);
 #endif
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
-    {
-	if (STRLEN(line) > 0)
-	    netbeans_inserted(buf, lnum+1, (colnr_T)0, line, (int)STRLEN(line));
-	netbeans_inserted(buf, lnum+1, (colnr_T)STRLEN(line),
-							   (char_u *)"\n", 1);
-    }
+    if (STRLEN(line) > 0)
+        netbeans_inserted(buf, lnum+1, (colnr_T)0, line, (int)STRLEN(line));
+    netbeans_inserted(buf, lnum+1, (colnr_T)STRLEN(line), (char_u *)"\n", 1);
 #endif
     return OK;
 }
@@ -2739,11 +2735,8 @@
     if (copy && (line = vim_strsave(line)) == NULL) /* allocate memory */
 	return FAIL;
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
-    {
-	netbeans_removed(curbuf, lnum, 0, (long)STRLEN(ml_get(lnum)));
-	netbeans_inserted(curbuf, lnum, 0, line, (int)STRLEN(line));
-    }
+    netbeans_removed(curbuf, lnum, 0, (long)STRLEN(ml_get(lnum)));
+    netbeans_inserted(curbuf, lnum, 0, line, (int)STRLEN(line));
 #endif
     if (curbuf->b_ml.ml_line_lnum != lnum)	    /* other line buffered */
 	ml_flush_line(curbuf);			    /* flush it */
@@ -2844,8 +2837,7 @@
 	line_size = ((dp->db_index[idx - 1]) & DB_INDEX_MASK) - line_start;
 
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
-	netbeans_removed(buf, lnum, 0, (long)line_size);
+    netbeans_removed(buf, lnum, 0, (long)line_size);
 #endif
 
 /*
diff --git a/src/misc1.c b/src/misc1.c
--- a/src/misc1.c
+++ b/src/misc1.c
@@ -2277,7 +2277,7 @@
      * care of notifiying Netbeans.
      */
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
+    if (!netbeans_closed())
 	was_alloced = FALSE;
     else
 #endif
diff --git a/src/move.c b/src/move.c
--- a/src/move.c
+++ b/src/move.c
@@ -933,8 +933,8 @@
 #ifdef FEAT_SIGNS
 	    + (
 # ifdef FEAT_NETBEANS_INTG
-		/* always show glyph gutter in netbeans */
-		usingNetbeans ||
+		/* show glyph gutter in netbeans */
+		!netbeans_closed() ||
 # endif
 		wp->w_buffer->b_signlist != NULL ? 2 : 0)
 #endif
diff --git a/src/netbeans.c b/src/netbeans.c
--- a/src/netbeans.c
+++ b/src/netbeans.c
@@ -24,6 +24,8 @@
 
 #if defined(FEAT_NETBEANS_INTG) || defined(PROTO)
 
+#define INET_SOCKETS
+
 /* Note: when making changes here also adjust configure.in. */
 #ifdef WIN32
 # ifdef DEBUG
@@ -43,8 +45,13 @@
 # define sock_close(sd) closesocket(sd)
 # define sleep(t) Sleep(t*1000) /* WinAPI Sleep() accepts milliseconds */
 #else
-# include <netdb.h>
-# include <netinet/in.h>
+# ifdef INET_SOCKETS
+#  include <netdb.h>
+#  include <netinet/in.h>
+# else
+#  include <sys/un.h>
+# endif
+
 # include <sys/socket.h>
 # ifdef HAVE_LIBGEN_H
 #  include <libgen.h>
@@ -57,8 +64,7 @@
 
 #include "version.h"
 
-#define INET_SOCKETS
-
+#define NETBEANS_CLOSED (nbsock == -1)
 #define GUARDED		10000 /* typenr for "guarded" annotation */
 #define GUARDEDOFFSET 1000000 /* base for "guarded" sign id's */
 #define MAX_COLOR_LENGTH 32 /* max length of color name in defineAnnoType */
@@ -75,7 +81,7 @@
 static void postpone_keycommand __ARGS((char_u *keystr));
 static void special_keys __ARGS((char_u *args));
 
-static void netbeans_connect __ARGS((void));
+static int netbeans_connect __ARGS((char *, int));
 static int getConnInfo __ARGS((char *file, char **host, char **port, char **password));
 
 static void nb_init_graphics __ARGS((void));
@@ -90,6 +96,7 @@
 static void nb_parse_cmd __ARGS((char_u *));
 static int  nb_do_cmd __ARGS((int, char_u *, int, int, char_u *));
 static void nb_send __ARGS((char *buf, char *fun));
+static void nb_free __ARGS((void));
 static int netbeans_hasgui __ARGS((void));
 
 #ifdef WIN64
@@ -98,7 +105,7 @@
 typedef int NBSOCK;
 #endif
 
-static NBSOCK sd = -1;			/* socket fd for Netbeans connection */
+static NBSOCK nbsock = -1;		/* socket fd for Netbeans connection */
 #ifdef FEAT_GUI_MOTIF
 static XtInputId inputHandler;		/* Cookie for input */
 #endif
@@ -110,8 +117,6 @@
 extern HWND s_hwnd;			/* Gvim's Window handle */
 #endif
 static int r_cmdno;			/* current command number for reply */
-static int haveConnection = FALSE;	/* socket is connected and
-					   initialization is done */
 static int dosetvisible = FALSE;
 
 /*
@@ -121,10 +126,17 @@
 # include "nbdebug.c"
 #endif
 
-/* Connect back to Netbeans process */
+static int needupdate = 0;
+static int inAtomic = 0;
+
     static void
-netbeans_disconnect(void)
+netbeans_close(void)
 {
+    if (NETBEANS_CLOSED)
+        return;
+
+    netbeans_send_disconnect();
+
 #ifdef FEAT_GUI_MOTIF
     if (inputHandler != (XtInputId)NULL)
     {
@@ -142,26 +154,42 @@
 #  ifdef FEAT_GUI_W32
     if (inputHandler == 0)
     {
-	WSAAsyncSelect(sd, s_hwnd, 0, 0);
+	WSAAsyncSelect(nbsock, s_hwnd, 0, 0);
 	inputHandler = -1;
     }
 #  endif
 # endif
 #endif
 
-    sd = -1;
-    haveConnection = FALSE;
 # ifdef FEAT_BEVAL
     bevalServers &= ~BEVAL_NETBEANS;
 # endif
+
+    sock_close(nbsock);
+    nbsock = -1;
+
+    needupdate = 0;
+    inAtomic = 0;
+    nb_free();
+
+    /* remove all signs and update the screen after gutter removal */
+    coloncmd(":sign unplace *");
+    changed_window_setting();
+    update_screen(CLEAR);
+    setcursor();
+    out_flush();
+#ifdef FEAT_GUI
+    gui_update_cursor(TRUE, FALSE);
+    gui_mch_flush();
+#endif
 }
 
 #define NB_DEF_HOST "localhost"
 #define NB_DEF_ADDR "3219"
 #define NB_DEF_PASS "changeme"
 
-    static void
-netbeans_connect(void)
+    static int
+netbeans_connect(char *params, int abort)
 {
 #ifdef INET_SOCKETS
     struct sockaddr_in	server;
@@ -174,6 +202,7 @@
 #else
     struct sockaddr_un	server;
 #endif
+    int	        sd;
     char	buf[32];
     char	*hostname = NULL;
     char	*address = NULL;
@@ -181,29 +210,29 @@
     char	*fname;
     char	*arg = NULL;
 
-    if (netbeansArg[3] == '=')
+    if (*params == '=')
     {
-	/* "-nb=fname": Read info from specified file. */
-	if (getConnInfo(netbeansArg + 4, &hostname, &address, &password)
+	/* "=fname": Read info from specified file. */
+	if (getConnInfo(params + 1, &hostname, &address, &password)
 								      == FAIL)
-	    return;
+	    return FAIL;
     }
     else
     {
-	if (netbeansArg[3] == ':')
-	    /* "-nb:<host>:<addr>:<password>": get info from argument */
-	    arg = netbeansArg + 4;
+	if (*params == ':')
+	    /* ":<host>:<addr>:<password>": get info from argument */
+	    arg = params + 1;
 	if (arg == NULL && (fname = getenv("__NETBEANS_CONINFO")) != NULL)
 	{
-	    /* "-nb": get info from file specified in environment */
+	    /* "": get info from file specified in environment */
 	    if (getConnInfo(fname, &hostname, &address, &password) == FAIL)
-		return;
+		return FAIL;
 	}
 	else
 	{
 	    if (arg != NULL)
 	    {
-		/* "-nb:<host>:<addr>:<password>": get info from argument */
+		/* ":<host>:<addr>:<password>": get info from argument */
 		hostname = arg;
 		address = strchr(hostname, ':');
 		if (address != NULL)
@@ -252,6 +281,10 @@
     if (hostname == NULL || address == NULL || password == NULL)
 	goto theend;	    /* out of memory */
 
+#ifdef FEAT_GUI_W32
+    netbeans_init_winsock();
+#endif
+
 #ifdef INET_SOCKETS
     port = atoi(address);
 
@@ -277,7 +310,6 @@
 	}
 	nbdebug(("error in gethostbyname() in netbeans_connect()\n"));
 	PERROR("gethostbyname() in netbeans_connect()");
-	sd = -1;
 	goto theend;
     }
     memcpy((char *)&server.sin_addr, host->h_addr, host->h_length);
@@ -323,6 +355,15 @@
 		{
 		    nbdebug(("retrying...\n"));
 		    sleep(5);
+                    if (!abort)
+                    {
+                        ui_breakcheck();
+                        if (got_int)
+                        {
+                            sock_errno = EINTR;
+			    break;
+                        }
+                    }
 		    if (connect(sd, (struct sockaddr *)&server,
 				sizeof(server)) == 0)
 		    {
@@ -335,7 +376,9 @@
 		    /* Get here when the server can't be found. */
 		    nbdebug(("Cannot connect to Netbeans #2\n"));
 		    PERROR(_("Cannot connect to Netbeans #2"));
-		    getout(1);
+                    if (abort)
+		        getout(1);
+                    goto theend;
 		}
 	    }
 
@@ -344,25 +387,24 @@
 	{
 	    nbdebug(("Cannot connect to Netbeans\n"));
 	    PERROR(_("Cannot connect to Netbeans"));
-	    getout(1);
+            if (abort)
+                getout(1);
+            goto theend;
 	}
     }
 
+    nbsock = sd;
     vim_snprintf(buf, sizeof(buf), "AUTH %s\n", password);
     nb_send(buf, "netbeans_connect");
 
     sprintf(buf, "0:version=0 \"%s\"\n", ExtEdProtocolVersion);
     nb_send(buf, "externaleditor_version");
 
-/*    nb_init_graphics();  delay until needed */
-
-    haveConnection = TRUE;
-
 theend:
     vim_free(hostname);
     vim_free(address);
     vim_free(password);
-    return;
+    return NETBEANS_CLOSED ? FAIL : OK;
 }
 
 /*
@@ -576,6 +618,9 @@
     char_u	*p;
     queue_T	*node;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     while (head.next != NULL && head.next != &head)
     {
 	node = head.next;
@@ -659,6 +704,7 @@
     netbeans_read();
 }
 #endif
+
     void
 netbeans_read()
 {
@@ -677,7 +723,7 @@
 # endif
 #endif
 
-    if (sd < 0)
+    if (NETBEANS_CLOSED)
     {
 	nbdebug(("messageFromNetbeans() called without a socket\n"));
 	return;
@@ -702,20 +748,20 @@
     {
 #ifdef HAVE_SELECT
 	FD_ZERO(&rfds);
-        FD_SET(sd, &rfds);
+        FD_SET(nbsock, &rfds);
         tval.tv_sec = 0;
         tval.tv_usec = 0;
-        if (select(sd + 1, &rfds, NULL, NULL, &tval) <= 0)
+        if (select(nbsock + 1, &rfds, NULL, NULL, &tval) <= 0)
             break;
 #else
 # ifdef HAVE_POLL
-	fds.fd = sd;
+	fds.fd = nbsock;
 	fds.events = POLLIN;
         if (poll(&fds, 1, 0) <= 0)
             break;
 # endif
 #endif
-	len = sock_read(sd, buf, MAXMSGSIZE);
+	len = sock_read(nbsock, buf, MAXMSGSIZE);
 	if (len <= 0)
 	    break;	/* error or nothing more to read */
 
@@ -729,7 +775,7 @@
     if (readlen <= 0)
     {
 	/* read error or didn't read anything */
-	netbeans_disconnect();
+	netbeans_close();
 	nbdebug(("messageFromNetbeans: Error in read() from socket\n"));
 	if (len < 0)
 	{
@@ -784,11 +830,9 @@
     if (STRCMP(cmd, "DISCONNECT") == 0)
     {
 	/* We assume the server knows that we can safely exit! */
-	if (sd >= 0)
-	    sock_close(sd);
 	/* Disconnect before exiting, Motif hangs in a Select error
 	 * message otherwise. */
-	netbeans_disconnect();
+	netbeans_close();
 	getout(0);
 	/* NOTREACHED */
     }
@@ -796,9 +840,7 @@
     if (STRCMP(cmd, "DETACH") == 0)
     {
 	/* The IDE is breaking the connection. */
-	if (sd >= 0)
-	    sock_close(sd);
-	netbeans_disconnect();
+	netbeans_close();
 	return;
     }
 
@@ -869,13 +911,13 @@
 
 typedef struct nbbuf_struct nbbuf_T;
 
-static nbbuf_T *buf_list = 0;
+static nbbuf_T *buf_list = NULL;
 static int buf_list_size = 0;	/* size of buf_list */
 static int buf_list_used = 0;	/* nr of entries in buf_list actually in use */
 
-static char **globalsignmap;
-static int globalsignmaplen;
-static int globalsignmapused;
+static char **globalsignmap = NULL;
+static int globalsignmaplen = 0;
+static int globalsignmapused = 0;
 
 static int  mapsigntype __ARGS((nbbuf_T *, int localsigntype));
 static void addsigntype __ARGS((nbbuf_T *, int localsigntype, char_u *typeName,
@@ -887,6 +929,66 @@
 static int curPCtype = -1;
 
 /*
+ * Free netbeans resources.
+ */
+    static void
+nb_free()
+{
+    keyQ_T *key_node = keyHead.next;
+    queue_T *cmd_node = head.next;
+    nbbuf_T buf;
+    buf_T *bufp;
+    int i;
+
+    /* free the netbeans buffer list */
+    for (i = 0; i < buf_list_used; i++)
+    {
+        buf = buf_list[i];
+        vim_free(buf.displayname);
+        vim_free(buf.signmap);
+        if ((bufp=buf.bufp) != NULL)
+        {
+            buf.bufp->b_netbeans_file = FALSE;
+            buf.bufp->b_was_netbeans_file = FALSE;
+        }
+    }
+    vim_free(buf_list);
+    buf_list = NULL;
+    buf_list_size = 0;
+    buf_list_used = 0;
+
+    /* free the queued key commands */
+    while(key_node != NULL && key_node != &keyHead)
+    {
+        keyQ_T *next = key_node->next;
+        vim_free(key_node->keystr);
+        vim_free(key_node);
+        if (next == &keyHead)
+        {
+            keyHead.next = &keyHead;
+            keyHead.prev = &keyHead;
+            break;
+        }
+        key_node = next;
+    }
+
+    /* free the queued netbeans commands */
+    while(cmd_node != NULL && cmd_node != &head)
+    {
+        queue_T *next = cmd_node->next;
+        vim_free(cmd_node->buffer);
+        vim_free(cmd_node);
+        if (next == &head)
+        {
+            head.next = &head;
+            head.prev = &head;
+            break;
+        }
+        cmd_node = next;
+    }
+}
+
+/*
  * Get the Netbeans buffer number for the specified buffer.
  */
     static int
@@ -906,7 +1008,7 @@
     int
 isNetbeansBuffer(buf_T *bufp)
 {
-    return usingNetbeans && bufp->b_netbeans_file;
+    return !NETBEANS_CLOSED && bufp->b_netbeans_file;
 }
 
 /*
@@ -921,7 +1023,7 @@
     int
 isNetbeansModified(buf_T *bufp)
 {
-    if (usingNetbeans && bufp->b_netbeans_file)
+    if (!NETBEANS_CLOSED && bufp->b_netbeans_file)
     {
 	int bufno = nb_getbufno(bufp);
 
@@ -1001,7 +1103,7 @@
     int i;
     static char buf[128];
 
-    if (!haveConnection)
+    if (NETBEANS_CLOSED)
 	return;
 
     for (i = 0; i < buf_list_used; i++)
@@ -1017,9 +1119,8 @@
 	}
 	sprintf(buf, "%d:killed=%d\n", i, r_cmdno);
 	nbdebug(("EVT: %s", buf));
-/*	nb_send(buf, "netbeans_end");    avoid "write failed" messages */
-	if (sd >= 0)
-	    ignored = sock_write(sd, buf, (int)STRLEN(buf));
+        /* nb_send(buf, "netbeans_end");    avoid "write failed" messages */
+        ignored = sock_write(nbsock, buf, (int)STRLEN(buf));
     }
 }
 
@@ -1033,7 +1134,7 @@
      * exited, only mention the first error until the connection works again. */
     static int did_error = FALSE;
 
-    if (sd < 0)
+    if (NETBEANS_CLOSED)
     {
 	if (!did_error)
 	{
@@ -1042,7 +1143,7 @@
 	}
 	did_error = TRUE;
     }
-    else if (sock_write(sd, buf, (int)STRLEN(buf)) != (int)STRLEN(buf))
+    else if (sock_write(nbsock, buf, (int)STRLEN(buf)) != (int)STRLEN(buf))
     {
 	if (!did_error)
 	{
@@ -1064,9 +1165,6 @@
 {
     char reply[32];
 
-    if (!haveConnection)
-	return;
-
     nbdebug(("REP %d: <none>\n", cmdno));
 
     sprintf(reply, "%d\n", cmdno);
@@ -1083,9 +1181,6 @@
 {
     char_u *reply;
 
-    if (!haveConnection)
-	return;
-
     nbdebug(("REP %d: %s\n", cmdno, (char *)result));
 
     reply = alloc((unsigned)STRLEN(result) + 32);
@@ -1104,9 +1199,6 @@
 {
     char reply[32];
 
-    if (!haveConnection)
-	return;
-
     nbdebug(("REP %d: %ld\n", cmdno, result));
 
     sprintf(reply, "%d %ld\n", cmdno, result);
@@ -1263,8 +1355,6 @@
 
 #define SKIP_STOP 2
 #define streq(a,b) (strcmp(a,b) == 0)
-static int needupdate = 0;
-static int inAtomic = 0;
 
 /*
  * Do the actual processing of a single netbeans command or function.
@@ -2639,6 +2729,12 @@
     vim_free(save_str);
 }
 
+    void
+ex_nbclose(eap)
+    exarg_T	*eap;
+{
+    netbeans_close();
+}
 
     void
 ex_nbkey(eap)
@@ -2647,6 +2743,12 @@
     (void)netbeans_keystring(eap->arg);
 }
 
+    void
+ex_nbstart(eap)
+    exarg_T	*eap;
+{
+    netbeans_open((char *)eap->arg, FALSE);
+}
 
 /*
  * Initialize highlights and signs for use by netbeans  (mostly obsolete)
@@ -2757,7 +2859,7 @@
 
     /* Don't do anything when 'ballooneval' is off, messages scrolled the
      * windows up or we have no connection. */
-    if (!p_beval || msg_scrolled > 0 || !haveConnection)
+    if (!p_beval || msg_scrolled > 0 || NETBEANS_CLOSED)
 	return;
 
     if (get_beval_info(beval, TRUE, &wp, &lnum, &text, &col) == OK)
@@ -2782,12 +2884,21 @@
 #endif
 
 /*
+ * Return TRUE when the netbeans connection is closed.
+ */
+    int
+netbeans_closed(void)
+{
+    return NETBEANS_CLOSED;
+}
+
+/*
  * Return netbeans file descriptor.
  */
     int
 netbeans_filedesc (void)
 {
-    return sd;
+    return nbsock;
 }
 
 /*
@@ -2796,41 +2907,38 @@
     void
 netbeans_gui_register(void)
 {
-    if (!netbeans_hasgui())
+    if (!netbeans_hasgui() || NETBEANS_CLOSED)
 	return;
 
-    if (sd > 0)
-    {
 #ifdef FEAT_GUI_MOTIF
-	/* tell notifier we are interested in being called
-	 * when there is input on the editor connection socket
-	 */
-	if (inputHandler == (XtInputId)NULL)
-	    inputHandler = XtAppAddInput((XtAppContext)app_context, sd,
-			     (XtPointer)(XtInputReadMask + XtInputExceptMask),
-						   messageFromNetbeans, NULL);
+    /* tell notifier we are interested in being called
+     * when there is input on the editor connection socket
+     */
+    if (inputHandler == (XtInputId)NULL)
+        inputHandler = XtAppAddInput((XtAppContext)app_context, nbsock,
+                         (XtPointer)(XtInputReadMask + XtInputExceptMask),
+                                               messageFromNetbeans, NULL);
 #else
 # ifdef FEAT_GUI_GTK
-	/*
-	 * Tell gdk we are interested in being called when there
-	 * is input on the editor connection socket
-	 */
-	if (inputHandler == 0)
-	    inputHandler = gdk_input_add((gint)sd, (GdkInputCondition)
-		((int)GDK_INPUT_READ + (int)GDK_INPUT_EXCEPTION),
-						   messageFromNetbeans, NULL);
+    /*
+     * Tell gdk we are interested in being called when there
+     * is input on the editor connection socket
+     */
+    if (inputHandler == 0)
+        inputHandler = gdk_input_add((gint)nbsock, (GdkInputCondition)
+            ((int)GDK_INPUT_READ + (int)GDK_INPUT_EXCEPTION),
+                                               messageFromNetbeans, NULL);
 # else
 #  ifdef FEAT_GUI_W32
-	/*
-	 * Tell Windows we are interested in receiving message when there
-	 * is input on the editor connection socket
-	 */
-	if (inputHandler == -1)
-	    inputHandler = WSAAsyncSelect(sd, s_hwnd, WM_NETBEANS, FD_READ);
+    /*
+     * Tell Windows we are interested in receiving message when there
+     * is input on the editor connection socket
+     */
+    if (inputHandler == -1)
+        inputHandler = WSAAsyncSelect(nbsock, s_hwnd, WM_NETBEANS, FD_READ);
 #  endif
 # endif
 #endif
-    }
 
 #ifdef FEAT_BEVAL
     bevalServers |= BEVAL_NETBEANS;
@@ -2841,20 +2949,31 @@
  * Tell netbeans that the window was opened, ready for commands.
  */
     void
-netbeans_startup_done(void)
+netbeans_open(char *params, int abort)
 {
     char *cmd = "0:startupDone=0\n";
 
-    if (!usingNetbeans)
-	return;
+    if (!NETBEANS_CLOSED)
+    {
+        EMSG("netbeans already connected");
+        return;
+    }
 
-    netbeans_connect();
-    if (!haveConnection)
+    if (netbeans_connect(params, abort) != OK)
 	return;
     netbeans_gui_register();
 
     nbdebug(("EVT: %s", cmd));
     nb_send(cmd, "netbeans_startup_done");
+    /* update the screen after having added the gutter */
+    changed_window_setting();
+    update_screen(CLEAR);
+    setcursor();
+    out_flush();
+#ifdef FEAT_GUI
+    gui_update_cursor(TRUE, FALSE);
+    gui_mch_flush();
+#endif
 }
 
 /*
@@ -2866,7 +2985,7 @@
 {
     char buf[128];
 
-    if (haveConnection)
+    if (!NETBEANS_CLOSED)
     {
 	sprintf(buf, "0:disconnect=%d\n", r_cmdno);
 	nbdebug(("EVT: %s", buf));
@@ -2883,7 +3002,7 @@
 {
     char buf[128];
 
-    if (!haveConnection)
+    if (NETBEANS_CLOSED)
 	return;
 
     sprintf(buf, "0:geometry=%d %d %d %d %d\n",
@@ -2904,8 +3023,8 @@
     char    buffer[2*MAXPATHL];
     char_u  *q;
 
-    if (!haveConnection || dosetvisible)
-	return;
+    if (NETBEANS_CLOSED || !bufp->b_netbeans_file || dosetvisible)
+        return;
 
     q = nb_quote(bufp->b_ffname);
     if (q == NULL || bp == NULL)
@@ -2936,7 +3055,7 @@
     nbbuf_T *bp = nb_get_buf(nb_getbufno(bufp));
     int	    bnum;
 
-    if (!haveConnection)
+    if (NETBEANS_CLOSED)
 	return;
 
     q = nb_quote(bufp->b_ffname);
@@ -2972,7 +3091,7 @@
     nbbuf_T	*nbbuf = nb_get_buf(bufno);
     char	buffer[2*MAXPATHL];
 
-    if (!haveConnection || bufno == -1)
+    if (NETBEANS_CLOSED || bufno == -1)
 	return;
 
     nbdebug(("netbeans_file_killed:\n"));
@@ -2999,7 +3118,7 @@
     int		bufno;
     nbbuf_T	*nbbuf;
 
-    if (!haveConnection || !netbeansFireChanges)
+    if (NETBEANS_CLOSED || !netbeansFireChanges)
 	return NULL;		/* changes are not reported at all */
 
     bufno = nb_getbufno(bufp);
@@ -3033,6 +3152,9 @@
     char_u	*p;
     char_u	*newtxt;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     nbbuf = nb_bufp2nbbuf_fire(bufp, &bufno);
     if (nbbuf == NULL)
 	return;
@@ -3078,6 +3200,9 @@
     pos_T	pos;
     long	off;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     nbbuf = nb_bufp2nbbuf_fire(bufp, &bufno);
     if (nbbuf == NULL)
 	return;
@@ -3106,6 +3231,9 @@
     void
 netbeans_unmodified(buf_T *bufp UNUSED)
 {
+    if (NETBEANS_CLOSED)
+        return;
+
 #if 0
     char_u	buf[128];
     int		bufno;
@@ -3135,6 +3263,9 @@
     char	buf[128];
     int		bufno;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     bufno = nb_getbufno(curbuf);
 
     if (bufno >= 0 && curwin != NULL && curwin->w_buffer == curbuf)
@@ -3185,10 +3316,9 @@
     long	off;
     char_u	*q;
 
-    if (!haveConnection)
+    if (NETBEANS_CLOSED)
 	return TRUE;
 
-
     if (bufno == -1)
     {
 	nbdebug(("got keycommand for non-NetBeans buffer, opening...\n"));
@@ -3246,6 +3376,9 @@
     int		bufno;
     nbbuf_T	*nbbuf;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     nbbuf = nb_bufp2nbbuf_fire(bufp, &bufno);
     if (nbbuf == NULL)
 	return;
@@ -3268,6 +3401,9 @@
     int		bufno;
     nbbuf_T	*nbbuf;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     nbbuf = nb_bufp2nbbuf_fire(bufp, &bufno);
     if (nbbuf == NULL)
 	return;
@@ -3293,6 +3429,9 @@
     signlist_T	*p;
     int		lnum;
 
+    if (NETBEANS_CLOSED)
+        return FALSE;
+
     for (p = curbuf->b_signlist; p != NULL; p = p->next)
 	if (p->id >= GUARDEDOFFSET)
 	    for (lnum = top + 1; lnum < bot; lnum++)
@@ -3314,6 +3453,9 @@
     int y;
     int x;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     x = 0;
     y = row * gui.char_height + 2;
 
@@ -3343,6 +3485,9 @@
     int x;
     GdkDrawable *drawable = gui.drawarea->window;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     x = 0;
     y = row * gui.char_height + 2;
 
@@ -3368,6 +3513,9 @@
 {
     signlist_T	*p;
 
+    if (NETBEANS_CLOSED)
+        return;
+
     for (p = curbuf->b_signlist; p != NULL; p = p->next)
     {
 	if (p->lnum == lnum && p->next && p->next->lnum == lnum)
diff --git a/src/normal.c b/src/normal.c
--- a/src/normal.c
+++ b/src/normal.c
@@ -2730,7 +2730,7 @@
 #endif
 
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans && isNetbeansBuffer(curbuf)
+    if (isNetbeansBuffer(curbuf)
 			    && !(jump_flags & (IN_STATUS_LINE | IN_SEP_LINE)))
     {
 	int key = KEY2TERMCAP1(c);
@@ -6759,6 +6759,7 @@
     char_u	*ptr;
     int		had_ctrl_v;
     long	n;
+    colnr_T     start;
 
     if (checkclearop(cap->oap))
 	return;
@@ -6912,15 +6913,12 @@
 		++curwin->w_cursor.col;
 	    }
 #ifdef FEAT_NETBEANS_INTG
-	    if (usingNetbeans)
-	    {
-		colnr_T start = (colnr_T)(curwin->w_cursor.col - cap->count1);
-
-		netbeans_removed(curbuf, curwin->w_cursor.lnum, start,
-							    (long)cap->count1);
-		netbeans_inserted(curbuf, curwin->w_cursor.lnum, start,
-					       &ptr[start], (int)cap->count1);
-	    }
+            start = (colnr_T)(curwin->w_cursor.col - cap->count1);
+
+            netbeans_removed(curbuf, curwin->w_cursor.lnum, start,
+                                                        (long)cap->count1);
+            netbeans_inserted(curbuf, curwin->w_cursor.lnum, start,
+                                           &ptr[start], (int)cap->count1);
 #endif
 
 	    /* mark the buffer as changed and prepare for displaying */
@@ -7108,7 +7106,7 @@
 		    && curwin->w_cursor.lnum < curbuf->b_ml.ml_line_count)
 	    {
 #ifdef FEAT_NETBEANS_INTG
-		if (usingNetbeans)
+		if (!netbeans_closed())
 		{
 		    if (did_change)
 		    {
@@ -7137,7 +7135,7 @@
 	}
     }
 #ifdef FEAT_NETBEANS_INTG
-    if (did_change && usingNetbeans)
+    if (did_change && !netbeans_closed())
     {
 	ptr = ml_get(pos.lnum);
 	count = curwin->w_cursor.col - pos.col;
diff --git a/src/ops.c b/src/ops.c
--- a/src/ops.c
+++ b/src/ops.c
@@ -2249,7 +2249,7 @@
 	    did_change |= one_change;
 
 # ifdef FEAT_NETBEANS_INTG
-	    if (usingNetbeans && one_change)
+	    if (!netbeans_closed() && one_change)
 	    {
 		char_u *ptr = ml_get_buf(curbuf, pos.lnum, FALSE);
 
@@ -2294,7 +2294,7 @@
 	    changed_lines(oap->start.lnum, oap->start.col, oap->end.lnum + 1,
 									  0L);
 #ifdef FEAT_NETBEANS_INTG
-	    if (usingNetbeans && did_change)
+	    if (!netbeans_closed() && did_change)
 	    {
 		char_u *ptr;
 		int count;
diff --git a/src/os_unix.c b/src/os_unix.c
--- a/src/os_unix.c
+++ b/src/os_unix.c
@@ -368,8 +368,7 @@
 
 #ifdef FEAT_NETBEANS_INTG
     /* Process the queued netbeans messages. */
-    if (usingNetbeans)
-	netbeans_parse_messages();
+    netbeans_parse_messages();
 #endif
 
     /* Check if window changed size while we were busy, perhaps the ":set
@@ -386,8 +385,7 @@
 	    handle_resize();
 #ifdef FEAT_NETBEANS_INTG
 	    /* Process the queued netbeans messages. */
-	    if (usingNetbeans)
-		netbeans_parse_messages();
+            netbeans_parse_messages();
 #endif
 	}
     }
@@ -421,8 +419,7 @@
 
 #ifdef FEAT_NETBEANS_INTG
 	/* Process the queued netbeans messages. */
-	if (usingNetbeans)
-	    netbeans_parse_messages();
+        netbeans_parse_messages();
 #endif
 	/*
 	 * we want to be interrupted by the winch signal
@@ -3108,8 +3105,7 @@
 #endif
 
 #ifdef FEAT_NETBEANS_INTG
-    if (usingNetbeans)
-	netbeans_send_disconnect();
+    netbeans_send_disconnect();
 #endif
 
 #ifdef EXITFREE
@@ -4788,7 +4784,7 @@
 {
     int		ret;
 #ifdef FEAT_NETBEANS_INTG
-    int nb_fd = (usingNetbeans ? netbeans_filedesc() : -1);
+    int nb_fd = netbeans_filedesc();
 #endif
 #if defined(FEAT_XCLIPBOARD) || defined(USE_XSMP) || defined(FEAT_MZSCHEME)
     static int	busy = FALSE;
diff --git a/src/proto/gui_w32.pro b/src/proto/gui_w32.pro
--- a/src/proto/gui_w32.pro
+++ b/src/proto/gui_w32.pro
@@ -93,4 +93,5 @@
 BalloonEval *gui_mch_create_beval_area __ARGS((void *target, char_u *mesg, void (*mesgCB)(BalloonEval *, int), void *clientData));
 void gui_mch_destroy_beval_area __ARGS((BalloonEval *beval));
 void netbeans_draw_multisign_indicator __ARGS((int row));
+void netbeans_init_winsock __ARGS((void));
 /* vim: set ft=c : */
diff --git a/src/proto/netbeans.pro b/src/proto/netbeans.pro
--- a/src/proto/netbeans.pro
+++ b/src/proto/netbeans.pro
@@ -4,11 +4,13 @@
 int isNetbeansBuffer __ARGS((buf_T *bufp));
 int isNetbeansModified __ARGS((buf_T *bufp));
 void netbeans_end __ARGS((void));
+void ex_nbclose __ARGS((exarg_T *eap));
 void ex_nbkey __ARGS((exarg_T *eap));
+void ex_nbstart __ARGS((exarg_T *eap));
 #ifdef FEAT_BEVAL
 void netbeans_beval_cb __ARGS((BalloonEval *beval, int state));
 #endif
-void netbeans_startup_done __ARGS((void));
+void netbeans_open __ARGS((char *, int));
 void netbeans_send_disconnect __ARGS((void));
 void netbeans_frame_moved __ARGS((int new_x, int new_y));
 void netbeans_file_activated __ARGS((buf_T *bufp));
@@ -23,8 +25,8 @@
 void netbeans_deleted_all_lines __ARGS((buf_T *bufp));
 int netbeans_is_guarded __ARGS((linenr_T top, linenr_T bot));
 void netbeans_draw_multisign_indicator __ARGS((int row));
-void netbeans_draw_multisign_indicator __ARGS((int row));
 void netbeans_gutter_click __ARGS((linenr_T lnum));
 void netbeans_gui_register __ARGS((void));
 int netbeans_filedesc __ARGS((void));
+int netbeans_closed __ARGS((void));
 /* vim: set ft=c : */
diff --git a/src/screen.c b/src/screen.c
--- a/src/screen.c
+++ b/src/screen.c
@@ -1977,7 +1977,7 @@
 {
     return (wp->w_buffer->b_signlist != NULL
 # ifdef FEAT_NETBEANS_INTG
-			    || usingNetbeans
+			    || !netbeans_closed()
 # endif
 		    );
 }
diff --git a/src/ui.c b/src/ui.c
--- a/src/ui.c
+++ b/src/ui.c
@@ -2935,8 +2935,7 @@
     if (col < 0)
     {
 #ifdef FEAT_NETBEANS_INTG
-	if (usingNetbeans)
-	    netbeans_gutter_click(lnum);
+        netbeans_gutter_click(lnum);
 #endif
 	col = 0;
     }
diff --git a/src/undo.c b/src/undo.c
--- a/src/undo.c
+++ b/src/undo.c
@@ -346,7 +346,7 @@
      * Netbeans defines areas that cannot be modified.  Bail out here when
      * trying to change text in a guarded area.
      */
-    if (usingNetbeans)
+    if (!netbeans_closed())
     {
 	if (netbeans_is_guarded(top, bot))
 	{
